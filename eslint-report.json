[{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\functions\\.eslintrc.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\functions\\src\\index.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'onRequest' is defined but never used.","line":11,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":11,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'logger' is defined but never used.","line":12,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":12,"endColumn":19},{"ruleId":"@typescript-eslint/no-explicit-any","severity":2,"message":"Unexpected any. Specify a different type.","line":65,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":65,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2326,2329],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2326,2329],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\r\n * Import function triggers from their respective submodules:\r\n *\r\n * import {onCall} from \"firebase-functions/v2/https\";\r\n * import {onDocumentWritten} from \"firebase-functions/v2/firestore\";\r\n *\r\n * See a full list of supported triggers at https://firebase.google.com/docs/functions\r\n */\r\n\r\nimport {setGlobalOptions} from \"firebase-functions\";\r\nimport {onRequest} from \"firebase-functions/https\";\r\nimport * as logger from \"firebase-functions/logger\";\r\n\r\nimport * as functions from 'firebase-functions';\r\nimport * as admin from 'firebase-admin';\r\n\r\nadmin.initializeApp();\r\n\r\nexport const createOrder = functions.https.onCall(async (data, context) => {\r\n  if (!context.auth) {\r\n    throw new functions.https.HttpsError('unauthenticated', 'Debes estar autenticado');\r\n  }\r\n\r\n  const userId = context.auth.uid;\r\n  const { items, envio, direccionEnvio, metodoPagoSimulado } = data;\r\n\r\n  // Validar carrito\r\n  if (!items || items.length === 0) {\r\n    throw new functions.https.HttpsError('invalid-argument', 'Carrito vacío');\r\n  }\r\n\r\n  const db = admin.firestore();\r\n  let subtotal = 0;\r\n  const productsToUpdate = [];\r\n\r\n  // Transacción para stock atómico\r\n  await db.runTransaction(async (transaction) => {\r\n    for (const item of items) {\r\n      const productRef = db.doc(`products/${item.productId}`);\r\n      const product = await transaction.get(productRef);\r\n      if (!product.exists) {\r\n        throw new functions.https.HttpsError('not-found', `Producto ${item.productId} no existe`);\r\n      }\r\n      const productData = product.data();\r\n      if (productData.stock < item.cantidad) {\r\n        throw new functions.https.HttpsError('failed-precondition', `Stock insuficiente para ${productData.nombre}`);\r\n      }\r\n      subtotal += productData.precio * item.cantidad;\r\n      productsToUpdate.push({ ref: productRef, newStock: productData.stock - item.cantidad });\r\n    }\r\n\r\n    // Actualizar stocks\r\n    for (const { ref, newStock } of productsToUpdate) {\r\n      transaction.update(ref, { stock: newStock });\r\n    }\r\n\r\n    // Calcular total\r\n    const envioCosto = envio.tipo === 'express' ? 10 : 5;  // Ejemplo costos\r\n    const total = subtotal + envioCosto;\r\n\r\n    // Crear order\r\n    const orderRef = db.collection('orders').doc();\r\n    transaction.set(orderRef, {\r\n      userId,\r\n      items: items.map((item: any) => ({\r\n        productId: item.productId,\r\n        nombre: item.nombre,\r\n        precioUnit: item.precio,  // Usar precio real de DB\r\n        cantidad: item.cantidad,\r\n      })),\r\n      subtotal,\r\n      envio: { tipo: envio.tipo, costo: envioCosto },\r\n      total,\r\n      direccionEnvio,\r\n      metodoPagoSimulado,\r\n      estado: 'pendiente',\r\n      creadoEn: admin.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n  });\r\n\r\n  return { success: true };\r\n});\r\n\r\n// Opcional: setUserRole\r\nexport const setUserRole = functions.https.onCall(async (data, context) => {\r\n  if (!context.auth || (await admin.firestore().doc(`users/${context.auth.uid}`).get()).data()?.rol !== 'admin') {\r\n    throw new functions.https.HttpsError('permission-denied', 'Solo admin');\r\n  }\r\n  const { userId, rol } = data;\r\n  await admin.firestore().doc(`users/${userId}`).update({ rol });\r\n  return { success: true };\r\n});\r\n\r\n// Start writing functions\r\n// https://firebase.google.com/docs/functions/typescript\r\n\r\n// For cost control, you can set the maximum number of containers that can be\r\n// running at the same time. This helps mitigate the impact of unexpected\r\n// traffic spikes by instead downgrading performance. This limit is a\r\n// per-function limit. You can override the limit for each function using the\r\n// `maxInstances` option in the function's options, e.g.\r\n// `onRequest({ maxInstances: 5 }, (req, res) => { ... })`.\r\n// NOTE: setGlobalOptions does not apply to functions using the v1 API. V1\r\n// functions should each use functions.runWith({ maxInstances: 10 }) instead.\r\n// In the v1 API, each function can only serve one request per container, so\r\n// this will be the maximum concurrent request count.\r\nsetGlobalOptions({ maxInstances: 10 });\r\n\r\n// export const helloWorld = onRequest((request, response) => {\r\n//   logger.info(\"Hello logs!\", {structuredData: true});\r\n//   response.send(\"Hello from Firebase!\");\r\n// });\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\scripts\\seed.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\App.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\components\\AdminOrderTable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\components\\AdminProductForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\components\\CartDrawer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\components\\Footer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\components\\Lightbox.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\components\\MiniCart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\components\\Navbar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\components\\ProductCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\components\\ProductGrid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\firebase\\client.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\firebase\\config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\global.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\hooks\\useAuth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\hooks\\useCart.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\hooks\\useProducts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\pages\\Admin.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\pages\\Carrito.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\pages\\Catalogo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\pages\\Checkout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\pages\\Cuenta.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\pages\\Home.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\pages\\Pedidos.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\pages\\Producto.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\setupTests.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\stores\\authStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\stores\\cartStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\types\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\utils\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\src\\vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\tests\\App.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\tests\\ProductCard.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\robda\\OneDrive\\Documentos\\clickgo-app\\vite.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]